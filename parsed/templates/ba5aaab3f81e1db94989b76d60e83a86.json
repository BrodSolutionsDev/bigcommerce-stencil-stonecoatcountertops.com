{"components/custom/project-builder/countertop/step2":"<div id=\"tempColorChoice\" class=\"flex-col step\" style=\"display: none\">\n  <h2 class=\"calculator-heading\">Countertop Color Finish</h2>\n  <div class=\"step-wrapper flex-row\">\n    <div class=\"step-wrapper__left\">\n      <div id=\"project-surface\" class=\"flex-col\">\n        <div id=\"project-state\" class=\"flex-col step-choice\">\n          <h3>What is your color system</h3>\n          <span class=\"project-selection\">\n            <select name=\"project_system\" id=\"system\">\n              <option value=\"Baltic Brown\" data-sku=\"SCBBE\">Baltic Brown</option>\n              <!-- sku won't work, doesn't match others -->\n              <option value=\"Black Exotic Marble\" data-sku=\"SCCBLKMARBLE\">Black Exotic Marble</option>\n              <option value=\"Black Galaxy\" data-sku=\"SCBGE\">Black Galaxy</option>\n              <option value=\"Black Marble\" data-sku=\"SCBME\">Black Marble</option>\n              <option value=\"Blue Fractured Granite\" data-sku=\"SCBFG\">Blue Fractured Granite</option>\n              <option value=\"Caramel Marble\" data-sku=\"SCCARMELKIT\">Caramel Marble</option>\n              <option value=\"Carrara Marble Exotic\" data-sku=\"SCCME\">Carrara Marble Exotic</option>\n              <!-- No sku -->\n              <!-- <option value=\"Carrara Marble Hand Meld\" data-sku=\"SCCME\">Carrara Marble Hand Meld</option> -->\n              <!-- No sku -->\n              <!-- <option value=\"Green Exotic Marble\" data-sku=\"SCCME\">Green Exotic Marble</option> -->\n              <!-- sku won't work, doesn't match others -->\n              <option value=\"Natural Earth Tones\" data-sku=\"SCSPEARTHTON\">Natural Earth Tones</option>\n              <!-- No sku -->\n              <!-- <option value=\"Soapstone\" data-sku=\"SCCBLKMARBLE\">Soapstone</option> -->\n              <!-- sku won't work, doesn't match others -->\n              <option value=\"White Exotic Marble\" data-sku=\"SCCWHTMARBLE\">White Exotic Marble</option>\n              <option value=\"Custom\">Custom (select your own colors)</option>\n            </select>\n          </span>\n        </div>\n\n        <div id=\"custom-color-selection\" class=\"flex-col step-choice\" style=\"display: none\">\n          <h3>Select your colors</h3>\n          <div id=\"custom-color-dropdowns\"></div>\n        </div>\n        <div class=\"step-help-text\">\n          <h4>Help me choose</h4>\n          <p>\n            Select from any pre-built epoxy countertop color finish above. If you don't find one you want, select CUSTOM\n            (select your own colors) to create a countertop finish that's uniquely yours.\n          </p>\n          <p>Each pre-built Epoxy Countertop Finish Kit comes with:</p>\n          <ul>\n            <li>Stone Coat Countertop Epoxy or Art Coat Epoxy</li>\n            <li>Polycolor Metallic Powders</li>\n            <li>Liquid Epoxy Dye Colors</li>\n            <li>Epoxy Undercoat</li>\n            <li>Your choice of Top Coat Finish</li>\n          </ul>\n        </div>\n        <button id=\"temp1-next\" class=\"desktop-next continue calculator-button\">Next</button>\n      </div>\n    </div>\n    {{> components/custom/project-builder/modals/help-choose-surface }}\n    <div class=\"step-wrapper__right\">\n      <div class=\"color-system-grid\">\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Baltic-Brown.png' }}\" alt=\"Baltic Brown\" />\n          <p>Baltic Brown</p>\n        </div>\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Black-Exotic-Marble.png' }}\" alt=\"Black Exotic Marble\" />\n          <p>Black Exotic Marble</p>\n        </div>\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Black-Galaxy.png' }}\" alt=\"Black Galaxy\" />\n          <p>Black Galaxy</p>\n        </div>\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Black-Marble.png' }}\" alt=\"Black Marble\" />\n          <p>Black Marble</p>\n        </div>\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Blue-Fractured-Granite.png' }}\" alt=\"Blue Fractured Granite\" />\n          <p>Blue Fractured Granite</p>\n        </div>\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Caramel-Marble.png' }}\" alt=\"Caramel Marble\" />\n          <p>Caramel Marble</p>\n        </div>\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Carrara-Marble-Exotic.png' }}\" alt=\"Carrara Marble Exotic\" />\n          <p>Carrara Marble Exotic</p>\n        </div>\n\n        <!-- <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Carrara-Marble-Hand-Meld.png' }}\" alt=\"Carrara Marble Hand Meld\" />\n          <p>Carrara Marble Hand Meld</p>\n        </div> -->\n\n        <!-- <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Green-Exotic-Marble.png' }}\" alt=\"Green Exotic Marble\" />\n          <p>Green Exotic Marble</p>\n        </div> -->\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Natural-Earth-Tones.png' }}\" alt=\"Natural Earth Tones\" />\n          <p>Natural Earth Tones</p>\n        </div>\n\n        <!-- <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/Soapstone.png' }}\" alt=\"Soapstone\" />\n          <p>Soapstone</p>\n        </div> -->\n\n        <div class=\"color-system-grid__item\">\n          <img src=\"{{cdn '/img/color-systems/White-Exotic-Marble.png' }}\" alt=\"White Exotic Marble\" />\n          <p>White Exotic Marble</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  (function () {\n    const callback = async (mutationList, observer) => {\n      if (currentStep !== 2) return;\n      if (document.getElementById('custom-color-selection').style.display === 'block') return;\n\n      const kits = {\n        'Baltic Brown': {\n          80: { sku: 'SCBBE4GAL' },\n          40: { sku: 'SCBBE2GAL' },\n          20: { sku: 'SCBBE1GAL' },\n          10: { sku: 'SCBBEHALF' }\n        },\n        'Black Exotic Marble': {\n          80: { sku: 'SCCBLKMARBLE4' },\n          40: { sku: 'SCCBLKMARBLE2' },\n          20: { sku: 'SCCBLKMARBLE1' },\n          10: { sku: 'SCCBLKMARBLEHALF' }\n        },\n        'Black Galaxy': {\n          80: { sku: 'SCBGE4GAL' },\n          40: { sku: 'SCBGE2GAL' },\n          20: { sku: 'SCBGE1GAL' },\n          10: { sku: 'SCBGEHALF' }\n        },\n        'Black Marble': {\n          80: { sku: 'SCBME4GAL' },\n          40: { sku: 'SCBME2GAL' },\n          20: { sku: 'SCBME1GAL' },\n          10: { sku: 'SCBMEHALF' }\n        },\n        'Blue Fractured Granite': {\n          80: { sku: 'SCBFG4GAL' },\n          40: { sku: 'SCBFG2GAL' },\n          20: { sku: 'SCBFG1GAL' },\n          10: { sku: 'SCBFGHALF' }\n        },\n        'Caramel Marble': {\n          80: { sku: 'SCCARMELKIT4' },\n          40: { sku: 'SCCARMELKIT2' },\n          20: { sku: 'SCCARMELKIT1' },\n          10: { sku: 'SCCARMELKITHALF' }\n        },\n        'Carrara Marble Exotic': {\n          80: { sku: 'SCCME4GAL' },\n          40: { sku: 'SCCME2GAL' },\n          20: { sku: 'SCCME1GAL' },\n          10: { sku: 'SCCMEHALF' }\n        },\n        'Natural Earth Tones': {\n          80: { sku: 'SCSPEARTHTONE4' },\n          40: { sku: 'SCSPEARTHTONE2' },\n          20: { sku: 'SCSPEARTHTONE1' },\n          10: { sku: 'SCSPEARTHTON1/2' }\n        },\n        'White Exotic Marble': {\n          80: { sku: 'SCCWHTMARBLE4GA' },\n          40: { sku: 'SCCWHTMARBLE2GA' },\n          20: { sku: 'SCCWHTMARBLE1GA' },\n          10: { sku: 'SCCWHTMARBLEHAL' }\n        }\n      };\n\n      // grab the sqft from localStorage to grab the correct kit size\n      const sqft = JSON.parse(localStorage.getItem('project-requirements'))['sqft'];\n      // get the choice from the kit dropdown (before listening for change in case user doesn't change kit)\n      let choice = Array.from(document.getElementById('system').children).filter(\n        child => child.value === document.getElementById('system').value\n      )[0];\n      if (choice.value !== 'Custom') {\n        // grab the required kit from the kits object based on the choice\n        let kit = kits[choice.innerText];\n        // set a default current variant to update on the following loop\n        let currentVariant = {\n          leftover: 100, // set leftover to a high number to update on the first loop iteration\n          variant: {}\n        };\n        // loop over the entries in the kit and destructure the coverage (key) and the variant (value)\n        for (const [coverage, variant] of Object.entries(kit)) {\n          // subtract the required sqft from the coverage to see how much is leftover\n          const leftover = Number(coverage) - Number(sqft);\n          // if the leftover is smaller than the currentVariant leftover (above) and the value isn't less than zero\n          if (leftover <= currentVariant.leftover && leftover >= 0) {\n            // update the leftover and variant in the currentVariant object\n            currentVariant.leftover = leftover;\n            currentVariant.variant = variant;\n          }\n        }\n        // update local storage\n        pbUpdateStorage('project_system', {\n          name: choice.value,\n          sku: currentVariant.variant.sku\n        });\n      } else {\n        // update local storage\n        pbUpdateStorage('project_system', {\n          name: 'Custom',\n          sku: ''\n        });\n      }\n\n      const projectSystem = document.querySelector(\"[name='project_system']\");\n      let projectSystemSelection = projectSystem.value;\n      projectSystem.addEventListener('change', function (e) {\n        projectSystemSelection = projectSystem.value;\n        // get the choice from the kit dropdown\n        choice = Array.from(document.getElementById('system').children).filter(\n          child => child.value === document.getElementById('system').value\n        )[0];\n        if (choice.value !== 'Custom') {\n          // grab the required kit from the kits object based on the choice\n          kit = kits[choice.innerText];\n          // set a default current variant to update on the following loop\n          let currentVariant = {\n            leftover: 100, // set leftover to a high number to update on the first loop iteration\n            variant: {}\n          };\n          // loop over the entries in the kit and destructure the coverage (key) and the variant (value)\n          for (const [coverage, variant] of Object.entries(kit)) {\n            // subtract the required sqft from the coverage to see how much is leftover\n            const leftover = Number(coverage) - Number(sqft);\n            // if the leftover is smaller than the currentVariant leftover (above) and the value isn't less than zero\n            if (leftover <= currentVariant.leftover && leftover >= 0) {\n              // update the leftover and variant in the currentVariant object\n              currentVariant.leftover = leftover;\n              currentVariant.variant = variant;\n            }\n          }\n          // update local storage\n          pbUpdateStorage('project_system', {\n            name: choice.value,\n            sku: currentVariant.variant.sku\n          });\n        } else {\n          // update local storage\n          pbUpdateStorage('project_system', {\n            name: 'Custom',\n            sku: ''\n          });\n        }\n      });\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(document.getElementById('progress-bar'), { attributes: true, childList: true, subtree: true });\n  })();\n</script>\n","components/custom/project-builder/modals/help-choose-surface":"<dialog class=\"help-choose-modal\" id=\"help-choose-surface-modal\">\n  <div class=\"modal-header\">\n    <button id=\"close-choose-surface-modal\" class=\"calculator-button close-choose-modal\">Close</button>\n  </div>\n  <div class=\"modal-content\">\n    <div class=\"help-choose__first-section\">\n      <h2>WHAT IS YOUR PROJECT SURFACE?</h2>\n      <ul>\n        <li>If you are starting a <strong>new project over bare wood</strong>, then you'll select \"New Countertop\"</li>\n        <li>\n          If this is a <strong>remodel</strong> of a countertop, select \"Existing Countertop\" <br /><em>*Remodel\n            projects\n            come with Bonding Primer</em>\n        </li>\n      </ul>\n\n      <h2>WHAT UNDERCOAT DO YOU NEED?</h2>\n      <em>Like a tinted primer when painting walls, match the undercoat tone to your project pour for optimal bonding\n        and\n        color results.</em>\n      <ul>\n        <li>If the final color will be <strong>dark</strong>, then you'll select \"Black\"</li>\n        <li>If the final color will be <strong>light</strong>, then you'll select \"White\"<br /><em>*White countertops\n            come\n            with Art Coat for UV protection against yellowing</em></li>\n        <li>\n          If the final color will be <strong>grey (or similar)</strong>, then you'll select \"Grey\" <br /><em>*Grey comes\n            with both Black and White undercoats that you'll mix together</em>\n        </li>\n      </ul>\n    </div>\n  </div>\n</dialog>"}
