{"components/custom/project-builder/countertop/step3":"<div id=\"stateAndUndercoat\" class=\"flex-col step\" style=\"display: none\">\n  <h2 class=\"calculator-heading\">Project Surface</h2>\n  <div class=\"step-wrapper flex-row\">\n    <div class=\"step-wrapper__left\">\n      <div id=\"project-surface\" class=\"flex-col\">\n        <div\n          id=\"project-state\"\n          class=\"project-selection-wrapper flex-col\"\n        >\n          <h3>What is your project surface?</h3>\n          <select name=\"project_surface\">\n            <option value=\"Existing Countertop\" data-sku=\"SCBPS1QT\">Updating Old Countertop</option>\n            <option value=\"New Countertop\" data-sku=\"\">Building New Countertop</option>\n          </select>\n          </p>\n        </div>\n\n        <div class=\"step-help-text\">\n          <h4>Help me choose</h4>\n          <p>If your countertops are in good condition, cover them with Stone Coat Epoxy instead of building new ones from MDF.  Save time and money while achieving a beautiful new countertop finish.</p>\n          <p>If your countertops are damaged, deteriorating or maybe you're starting from scratch, it may be time to build new ones.  We'll guide you through the entire process, ensuring your project is a success.</p>\n        </div>\n\n        <div\n          id=\"project-undercoat\"\n          class=\"project-selection-wrapper flex-col\"\n        >\n          <h3>What undercoat do you need?</h3>\n          <select name=\"undercoat_color\">\n            <option value=\"White\" data-sku=\"SCWEUCQT\">White</option>\n            <option value=\"Black\" data-sku=\"SCBEUCQT\">Black</option>\n            <option value=\"Grey\" data-sku=\"SCWEUCQT__SCBEUCQT\">Grey</option>\n          </select>\n        </div>\n\n        <div id=\"undercoat-help-text\" class=\"step-help-text\">\n          <h4>Help me choose</h4>\n          <p>Our high bond, ammonia-free paint is perfect for coloring your substrate before you pour.  Pick you Undercoat Color based off the color of your countertop pour.  White or light countertops use white undercoat.  Grey or neutral countertops will use grey undercoat.  Black or dark countertops will use black undercoat.</p>\n        </div>\n        <button id=\"state-next\" class=\"desktop-next continue calculator-button\">Next</button>\n      </div>\n    </div>\n    {{> components/custom/project-builder/modals/help-choose-surface }}\n    <div class=\"step-wrapper__right\">\n      <div class=\"flex-col\">\n        <h3>How to pour epoxy over any surface</h3>\n        <div class=\"video-wrapper\">\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src=\"https://www.youtube.com/embed/BVGYT6R1qys?si=vn49THfotR-AGZSp\"\n            title=\"YouTube video player\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n            allowfullscreen\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n  (function () {\n    const projectSurface = document.querySelector(\"[name='project_surface']\");\n    const projectUndercoat = document.querySelector(\"[name='undercoat_color']\");\n\n    const callback = async (mutationList, observer) => {\n      if (currentStep !== 3) return;\n      if (JSON.parse(localStorage.getItem('project-requirements'))['project_system'].name !== 'Custom') {\n        document.getElementById('project-undercoat').style.display = 'none';\n        document.getElementById('undercoat-help-text').style.display = 'none';\n\n        let surfaceChoice = Array.from(projectSurface.children).filter(\n          child => child.value === projectSurface.value\n        )[0];\n\n        let undercoatChoice = Array.from(projectUndercoat.children).filter(\n          child => child.value === projectUndercoat.value\n        )[0];\n\n        pbUpdateStorage(\"project_type\", {\n          name: surfaceChoice.value,\n          sku: surfaceChoice.dataset.sku\n        });\n\n        projectSurface.addEventListener(\"change\", function(e) {\n          surfaceChoice = Array.from(projectSurface.children).filter(\n            child => child.value === projectSurface.value\n          )[0];\n\n          pbUpdateStorage(\"project_type\", {\n            name: surfaceChoice.value,\n            sku: surfaceChoice.dataset.sku\n          });\n        });\n      } else {\n        document.getElementById('project-undercoat').style.display = 'block';\n        document.getElementById('undercoat-help-text').style.display = 'block';\n\n        let surfaceChoice = Array.from(projectSurface.children).filter(\n          child => child.value === projectSurface.value\n        )[0];\n\n        pbUpdateStorage(\"project_type\", {\n            name: surfaceChoice.value,\n            sku: surfaceChoice.dataset.sku\n          });\n\n        let undercoatChoice = Array.from(projectUndercoat.children).filter(\n          child => child.value === projectUndercoat.value\n        )[0];\n\n        pbUpdateStorage(\"undercoat_color\", {\n            name: undercoatChoice.value,\n            sku: undercoatChoice.dataset.sku\n          });\n\n        projectSurface.addEventListener('change', function () {\n          surfaceChoice = Array.from(projectSurface.children).filter(\n            child => child.value === projectSurface.value\n          )[0];\n\n          pbUpdateStorage(\"project_type\", {\n            name: surfaceChoice.value,\n            sku: surfaceChoice.dataset.sku\n          });\n        })\n\n        projectUndercoat.addEventListener('change', function () {\n          undercoatChoice = Array.from(projectUndercoat.children).filter(\n            child => child.value === projectUndercoat.value\n          )[0];\n\n          pbUpdateStorage(\"undercoat_color\", {\n            name: undercoatChoice.value,\n            sku: undercoatChoice.dataset.sku\n          });\n        });\n      }\n    };\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(callback);\n\n    // Start observing the target node for configured mutations\n    observer.observe(document.getElementById('progress-bar'), { attributes: true, childList: true, subtree: true });\n  })();\n</script>\n","components/custom/project-builder/modals/help-choose-surface":"<dialog class=\"help-choose-modal\" id=\"help-choose-surface-modal\">\n  <div class=\"modal-header\">\n    <button id=\"close-choose-surface-modal\" class=\"calculator-button close-choose-modal\">Close</button>\n  </div>\n  <div class=\"modal-content\">\n    <div class=\"help-choose__first-section\">\n      <h2>WHAT IS YOUR PROJECT SURFACE?</h2>\n      <ul>\n        <li>If you are starting a <strong>new project over bare wood</strong>, then you'll select \"New Countertop\"</li>\n        <li>\n          If this is a <strong>remodel</strong> of a countertop, select \"Existing Countertop\" <br /><em>*Remodel\n            projects\n            come with Bonding Primer</em>\n        </li>\n      </ul>\n\n      <h2>WHAT UNDERCOAT DO YOU NEED?</h2>\n      <em>Like a tinted primer when painting walls, match the undercoat tone to your project pour for optimal bonding\n        and\n        color results.</em>\n      <ul>\n        <li>If the final color will be <strong>dark</strong>, then you'll select \"Black\"</li>\n        <li>If the final color will be <strong>light</strong>, then you'll select \"White\"<br /><em>*White countertops\n            come\n            with Art Coat for UV protection against yellowing</em></li>\n        <li>\n          If the final color will be <strong>grey (or similar)</strong>, then you'll select \"Grey\" <br /><em>*Grey comes\n            with both Black and White undercoats that you'll mix together</em>\n        </li>\n      </ul>\n    </div>\n  </div>\n</dialog>"}
