{"components/custom/project-builder/countertop/step1":"<div id=\"amount\" class=\"step flex-col\" style=\"display: none\">\n  <h2 class=\"calculator-heading\">Project Calculator</h2>\n  <div class=\"step-wrapper flex-row\">\n    <div id=\"inputs\" class=\"step-wrapper__left flex-col\">\n      <p>\n        <label for=\"total-sqft\">Total Sq Ft</label>\n        <input type=\"number\" id=\"total-sqft\" min=\"1\" value=\"1\" />\n      </p>\n      <p id=\"add-backsplash-section\">\n        <input type=\"checkbox\" id=\"add-backsplash\" name=\"add_backsplash\" value=\"addBacksplash\">\n        <label for=\"add-backsplash\">Include backsplash (adds 10% more square footage)</label>\n      </p>\n      <p>\n        <button class=\"open-modal-text\" id=\"help-calculate\">Help me calculate my square footage</button>\n      </p>\n      <p>\n        <button id=\"amount-next\" class=\"desktop-next continue calculator-button\">Next</button>\n      <p class=\"inputs-helper\" style=\"color: red !important; display: none;\">All fields must be filled out and be above\n        zero</p>\n      </p>\n    </div>\n\n    <div id=\"helper-content\" class=\"step-wrapper__right flex-col\">\n      <div class=\"flex-col\">\n        <h3>How to pour epoxy over any surface</h3>\n        <div class=\"video-wrapper\">\n          <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/HY5z-7Zh9mQ?si=ye7nMuTukY5RPkV9\"\n            title=\"YouTube video player\" frameborder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n            allowfullscreen></iframe>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n{{> components/custom/project-builder/modals/help-calculate }}\n\n<script>\n  function toggleDisabled(buttonId, input) {\n    if (input.value === '' || Number(input.value) <= 0) {\n      document.getElementById(buttonId).disabled = true;\n      document.querySelector(\".inputs-helper\").style.display = \"block\";\n      input.style.borderColor = \"red\";\n    } else {\n      input.style.borderColor = \"#B0B0B0\";\n      document.querySelector(\".inputs-helper\").style.display = \"none\";\n      document.getElementById(buttonId).disabled = false;\n    }\n  }\n\n  \n  let sqFtValue = 1;\n  let sqFtPlus10Percent;\n  (function () {\n    // grab the total sqft input\n    const sqftInput = document.getElementById('total-sqft');\n    // disabled the 'next' button by default\n    // document.getElementById('amount-next').disabled = true\n    // listen for a user manually changing the input\n    sqftInput.addEventListener('change', function (e) {\n      // toggleDisabled('amount-next', e.target)\n      document.getElementById(\"add-backsplash\").checked = false;\n      pbUpdateStorage('sqft', Number(e.target.value));\n    });\n\n    // listen for the user calculating the input via the calculator\n    ((input) => {\n      // Callback function to execute when mutations are observed\n      const callback = (mutationList, observer) => {\n        // sqftInput.value = sqftInput.dataset.total;\n        toggleDisabled('amount-next', input)\n        pbUpdateStorage('sqft', Number(input.value));\n      };\n\n      // Create an observer instance linked to the callback function\n      const observer = new MutationObserver(callback);\n\n      // Start observing the target node for configured mutations\n      observer.observe(input, { attributes: true });\n    })(sqftInput);\n  })()\n</script>\n\n<script>\n    (function () {\n      const totalSqFtInput = document.getElementById('total-sqft');\n\n      const surfaceValues = {};\n      const cutoutValues = {};\n\n      const addBacksplashInput = document.getElementById(\"add-backsplash\");\n        document.getElementById(\"add-backsplash-section\").addEventListener(\"click\", function() {\n          addBacksplashInput.checked = !addBacksplashInput.checked;\n\n          const sqft = JSON.parse(localStorage.getItem(\"project-requirements\"))['sqft'];\n\n          if (addBacksplashInput.checked) {\n            totalSqFtInput.value = (Number(totalSqFtInput.value) + (sqft * .1)).toFixed(2);\n          } else {\n            totalSqFtInput.value = (Number(totalSqFtInput.value) - (sqft*  .1)).toFixed(2);\n          }\n\n          pbUpdateStorage('sqft', Number(totalSqFtInput.value));\n        })\n\n      // add the value of only the edited surface inputs\n      document.getElementById('modal-calculations').addEventListener('change', function (e) {\n        // only grab the target if it has this class\n        const input = e.target.closest('.countertop-surface-dimensions');\n        if (!input) return;\n        if (Number(input.value) === 0) return;\n        // destructure the section name and dimension name from the id of the input\n        const [section, dimension] = input.id.split('-');\n        // if no section exists in the surface values input, add an empty object\n        if (!surfaceValues[section]) surfaceValues[section] = {};\n        // set the value to the value of the input\n        surfaceValues[section][dimension] = {\n          value: Number(input.value),\n          element: input\n        };\n      });\n\n      // add the value of only the edited cutout inputs\n      document.getElementById('modal-calculations').addEventListener('change', function (e) {\n        // only grab the target if it has this class\n        const input = e.target.closest('.countertop-cutout-dimensions');\n        if (!input) return;\n        // destructure the section name and dimension name from the id of the input\n        // second comma is required since the id has two dashes\n        const [section, , dimension] = input.id.split('-');\n        // if no section exists in the surface values input, add an empty object\n        if (!cutoutValues[section]) cutoutValues[section] = {};\n        // set the value to the value of the input\n        cutoutValues[section][dimension] = {\n          value: Number(input.value),\n          element: input\n        };\n      });\n\n      function validateInputsReturnTotals(event, valuesObj) {\n        let tempTotal = 0;\n        for (const section of Object.values(valuesObj)) {\n          if (Object.values(section).length < 2) {\n            const invalidElement = Object.values(section)[0].element || Object.values(section)[1].element;\n            invalidElement.closest('.help-calculate-inputs').style.background = 'rgba(255, 0, 0, .25)';\n            document.getElementById('calculate-help-inputs').style.display = 'block';\n            event.stopImmediatePropagation();\n            return;\n          } else {\n            const invalidElement = Object.values(section)[0].element || Object.values(section)[1].element;\n            invalidElement.closest('.help-calculate-inputs').style.background = 'transparent';\n            document.getElementById('calculate-help-inputs').style.display = 'none';\n          }\n          // add the length * width of the sections to the total\n          tempTotal += calculateTotalSqFt(section);\n        }\n        return tempTotal;\n      }\n\n      const calculateTotalSqFt = arr => Object.values(arr).reduce((acc, cur) => acc.value * cur.value);\n\n      document.getElementById('calculate-amount-button').addEventListener('click', function (e) {\n        // set the total to zero to reset the value every time\n        // loop over the surface value sections\n        let totalSurface = validateInputsReturnTotals(e, surfaceValues);\n        let totalCutout = validateInputsReturnTotals(e, cutoutValues);\n\n        if (totalSurface === undefined || totalCutout === undefined) return;\n\n        if (totalCutout > totalSurface) {\n          e.stopImmediatePropagation();\n          document.getElementById('calculate-help-amounts').style.display = 'block';\n          return;\n        } else {\n          document.getElementById('calculate-help-amounts').style.display = 'none';\n           // set the total sq ft input in step 1 to the value, fixed to two decimal places\n          totalSqFtInput.dataset.total = ((totalSurface - totalCutout) / 144).toFixed(2);\n          totalSqFtInput.value = totalSqFtInput.dataset.total;\n          document.getElementById(\"help-calculate-modal\").removeAttribute(\"open\")\n        }\n      });\n    })();\n</script>","components/custom/project-builder/modals/help-calculate":"<dialog id=\"help-calculate-modal\" class=\"step\">\n  <div class=\"modal-header\">\n    <p style=\"visibility: hidden\" id=\"temp-total-sqft\">\n      <strong>Total:</strong>\n      <span id=\"temp-total-sqft__result\">0</span>\n      Sq Ft\n    </p>\n    <button id=\"close-calculate-modal\" class=\"calculator-button\">Close</button>\n  </div>\n  <div class=\"modal-content step-wrapper\">\n    <div id=\"modal-calculations\" class=\"step-wrapper__left\">\n      <div class=\"help-calculate-input-list flex-col\">\n        <h2>Countertop Sizes</h2>\n        <div class=\"help-calculate-inputs flex-row\">\n          <p class=\"input-title\">Section A</p>\n          <div class=\"input-width flex-row\">\n            <label for=\"sectionA-width\">Width:</label>\n            <input type=\"number\" id=\"sectionA-width\" class=\"countertop-surface-dimensions\" />\n            <span>inches</span>\n          </div>\n          <div class=\"input-length flex-row\">\n            <label for=\"sectionA-length\">Length:</label>\n            <input type=\"number\" id=\"sectionA-length\" class=\"countertop-surface-dimensions\" />\n            <span>inches</span>\n          </div>\n        </div>\n        <div class=\"help-calculate-inputs flex-row\">\n          <p class=\"input-title\">Section B</p>\n          <div class=\"input-width flex-row\">\n            <label for=\"sectionB-width\">Width:</label>\n            <input type=\"number\" id=\"sectionB-width\" class=\"countertop-surface-dimensions\" />\n            <span>inches</span>\n          </div>\n          <div class=\"input-length flex-row\">\n            <label for=\"sectionB-length\">Length:</label>\n            <input type=\"number\" id=\"sectionB-length\" class=\"countertop-surface-dimensions\" />\n            <span>inches</span>\n          </div>\n        </div>\n        <div class=\"help-calculate-inputs flex-row\">\n          <p class=\"input-title\">Section C</p>\n          <div class=\"input-width flex-row\">\n            <label for=\"sectionC-width\">Width:</label>\n            <input type=\"number\" id=\"sectionC-width\" class=\"countertop-surface-dimensions\" />\n            <span>inches</span>\n          </div>\n          <div class=\"input-length flex-row\">\n            <label for=\"sectionC-length\">Length:</label>\n            <input type=\"number\" id=\"sectionC-length\" class=\"countertop-surface-dimensions\" />\n            <span>inches</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"help-calculate-input-list flex-col\">\n        <h2>Cutout Sizes <small>(For sinks, appliances, etc)</small></h2>\n        <div class=\"help-calculate-inputs flex-row\">\n          <p class=\"input-title\">Section A</p>\n          <div class=\"input-width flex-row\">\n            <label for=\"sectionA-cutout-width\">Width:</label>\n            <input type=\"number\" id=\"sectionA-cutout-width\" class=\"countertop-cutout-dimensions\" />\n            <span>inches</span>\n          </div>\n          <div class=\"input-length flex-row\">\n            <label for=\"sectionA-cutout-length\">Length:</label>\n            <input type=\"number\" id=\"sectionA-cutout-length\" class=\"countertop-cutout-dimensions\" />\n            <span>inches</span>\n          </div>\n        </div>\n        <div class=\"help-calculate-inputs flex-row\">\n          <p class=\"input-title\">Section B</p>\n          <div class=\"input-width flex-row\">\n            <label for=\"sectionB-cutout-width\">Width:</label>\n            <input type=\"number\" id=\"sectionB-cutout-width\" class=\"countertop-cutout-dimensions\" />\n            <span>inches</span>\n          </div>\n          <div class=\"input-length flex-row\">\n            <label for=\"sectionB-cutout-length\">Length:</label>\n            <input type=\"number\" id=\"sectionB-cutout-length\" class=\"countertop-cutout-dimensions\" />\n            <span>inches</span>\n          </div>\n        </div>\n        <div class=\"help-calculate-inputs flex-row\">\n          <p class=\"input-title\">Section C</p>\n          <div class=\"input-width flex-row\">\n            <label for=\"sectionC-cutout-width\">Width:</label>\n            <input type=\"number\" id=\"sectionC-cutout-width\" class=\"countertop-cutout-dimensions\" />\n            <span>inches</span>\n          </div>\n          <div class=\"input-length flex-row\">\n            <label for=\"sectionC-cutout-length\">Length:</label>\n            <input type=\"number\" id=\"sectionC-cutout-length\" class=\"countertop-cutout-dimensions\" />\n            <span>inches</span>\n          </div>\n        </div>\n      </div>\n      <button class=\"calculator-button\" id=\"calculate-amount-button\">Calculate</button>\n      <p id=\"calculate-help-inputs\" style=\"display: none; color: red !important\">\n        You must fill in width <strong>and</strong> length\n      </p>\n      <p id=\"calculate-help-amounts\" style=\"display: none; color: red !important\">\n        Your cutouts cannot be larger than your countertop\n      </p>\n    </div>\n    <div id=\"helper-content\" class=\"step-wrapper__right flex-col\">\n      <div id=\"modal-helper-content\">\n        <div class=\"tab\">\n          <button class=\"tablinks active\" onclick=\"openShape(event, 'Square')\">Rectangle</button>\n          <button class=\"tablinks\" onclick=\"openShape(event, 'LShape')\">L-Shape</button>\n          <button class=\"tablinks\" onclick=\"openShape(event, 'UShape')\">U-Shape</button>\n        </div>\n\n        <div id=\"Square\" class=\"tabcontent\" style=\"display: flex\">\n          <img\n            id=\"helper-img\"\n            src=\"https://cdn11.bigcommerce.com/s-fy21dwtsxg/images/stencil/original/image-manager/rectangle-shape.png?t=1706113186\"\n          />\n        </div>\n\n        <div id=\"LShape\" class=\"tabcontent\">\n          <img\n            id=\"helper-img\"\n            src=\"https://cdn11.bigcommerce.com/s-fy21dwtsxg/images/stencil/original/image-manager/l-shape.png?t=1706113185\"\n          />\n        </div>\n\n        <div id=\"UShape\" class=\"tabcontent\">\n          <img\n            id=\"helper-img\"\n            src=\"https://cdn11.bigcommerce.com/s-fy21dwtsxg/images/stencil/original/image-manager/u-shape.png?t=1706113186\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</dialog>\n"}
